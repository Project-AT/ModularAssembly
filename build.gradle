buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group = modVersion
version = mcVersion
archivesBaseName = modId

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false

    def args = [
            "-Dmixin.hotSwap=true",
            "-Dmixin.debug.export=true",
            "-Dmixin.checks.interfaces=true"
    ]

    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
}

repositories {
    mavenCentral()
    maven { url = "https://maven.tterrag.com/" } //Top
    maven { url = "https://www.cursemaven.com" } //CurseMaven
    maven { url = "https://maven.hellfiredev.net" } //ModularMachinery
    maven { url = "https://repo.spongepowered.org/maven" } //Mixin
    maven { url = "https://dvs1.progwml6.com/files/maven" } //Jei
}

dependencies {
    runtime "mezz.jei:jei_${mcVersion}:${jeiVersion}"
    runtime "mcjty.theoneprobe:TheOneProbe-${mcShort}:${topVersion}"

    deobfCompile "curse.maven:mixinbooter-${mixinBooterVersion}"
    deobfCompile "hellfirepvp.modularmachinery:modularmachinery:${mcVersion}-${mmVersion}"

    compile('org.spongepowered:mixin:0.8-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

mixin {
    add sourceSets.main, "mixins.modularassembly.refmap.json"
}
